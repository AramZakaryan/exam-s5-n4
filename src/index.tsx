// 67%


// // // // // // import React from 'react'
// // // // // // import ReactDOM from 'react-dom/client';
// // // // // //
// // // // // // export const App = () => {
// // // // // //     return (
// // // // // //         <div>
// // // // // //             <h2>–ö–∞–∫–æ–µ –∏–∑ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –≤–µ—Ä–Ω–æ ?</h2>
// // // // // //             <ul>
// // // // // //                 <li>1 - –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —Ñ–∞–π–ª –±—ã–ª –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω —Å –ø–æ–º–æ—â—å—é git init –∏ –∑–∞–∫–æ–º–º–∏—á–µ–Ω, git –±—É–¥–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤—Å–µ
// // // // // //                     —Å–ª–µ–¥—É—é—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –Ω—ë–º.
// // // // // //                 </li>
// // // // // //                 <li>2 - –í–µ—Ç–∫–∏ –≤ Git –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –∫–æ–º–º–∏—Ç. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–∫—É—é-—Ç–æ —Ñ–∏—á—É –∏–ª–∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–≥
// // // // // //                     (–Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π –∏–ª–∏ —Å–µ—Ä—å–µ–∑–Ω—ã–π), –º—ã —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –≤–µ—Ç–∫—É. –û–Ω–∞ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Ö–æ—Ç–∏–º
// // // // // //                     –¥–æ–±–∞–≤–∏—Ç—å –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π.
// // // // // //                 </li>
// // // // // //                 <li>3 - –ö–æ–º–∞–Ω–¥–∞ git add —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Git. –° –µ–µ –ø–æ–º–æ—â—å—é –º–æ–∂–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–µ–∫—Ç –±–µ–∑
// // // // // //                     —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–µ—Ä—Å–∏—è–º–∏ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Git –∏–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π –ø—É—Å—Ç–æ–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
// // // // // //                 </li>
// // // // // //                 <li>4 - –ù–∏ –æ–¥–Ω–æ –∏–∑ –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –Ω–µ –≤–µ—Ä–Ω–æ</li>
// // // // // //             </ul>
// // // // // //         </div>
// // // // // //     )
// // // // // // }
// // // // // //
// // // // // //
// // // // // // const root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);
// // // // // // root.render(<App/>);
// // // // // //
// // // // // // // üìú –û–ø–∏—Å–∞–Ω–∏–µ:
// // // // // // // –ö–∞–∫–æ–µ –∏–∑ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –≤–µ—Ä–Ω–æ ?
// // // // // // // –ú–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ (–æ—Ç–≤–µ—Ç –¥–∞–π—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª).
// // // // // // // ‚ùó –û—Ç–≤–µ—Ç –±—É–¥–µ—Ç –∑–∞—Å—á–∏—Ç–∞–Ω –∫–∞–∫ –≤–µ—Ä–Ω—ã–π, —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–æ–ª–Ω–æ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏.
// // // // // // // –ï—Å–ª–∏ —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç (1),
// // // // // // // –∞ –Ω—É–∂–Ω–æ –±—ã–ª–æ —É–∫–∞–∑–∞—Ç—å –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ (1 –∏ 2), —Ç–æ –æ—Ç–≤–µ—Ç –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –±—É–¥–µ—Ç –∑–∞—Å—á–∏—Ç–∞–Ω –∫–∞–∫ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
// // // // // //
// // // // // // // üñ• –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: 1
// // // // // //
// // // // // // wrong answer 1 2
// // // // //
// // // // // export const App = () => {
// // // // //     return (
// // // // //         <div>
// // // // //             <h2>–í –∫–∞–∫–æ–º —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–∞—é—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –ø—Ä–∏ —Å–ª–∏—è–Ω–∏–∏ –≤–µ—Ç–æ–∫ ?</h2>
// // // // //             <ul>
// // // // //                 <li>1 - –í —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ –≤ –æ–±–µ–∏—Ö –≤–µ—Ç–∫–∞—Ö –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–¥–Ω–∏—Ö –∏ —Ç–µ—Ö –∂–µ —Å—Ç—Ä–æ–∫</li>
// // // // //                 <li>2 - –í —Å–ª—É—á–∞–µ –∫–æ–≥–¥–∞ –≤–µ—Ç–∫–∏ –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã –æ—Ç —Ä–∞–∑–Ω—ã—Ö –∫–æ–º–º–∏—Ç–æ–≤</li>
// // // // //                 <li>3 - –í —Å–ª—É—á–∞–µ –∫–æ–≥–¥–∞ –≤–µ—Ç–∫–∏ –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã –≤ —Ä–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è</li>
// // // // //                 <li>4 - –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã –Ω–µ –≤–æ–∑–Ω–∏–∫–∞—é—Ç, —ç—Ç–æ —É—Å—Ç–∞—Ä–µ–≤—à–∞—è –ø—Ä–æ–±–ª–µ–º–∞. –°–µ–≥–æ–¥–Ω—è git –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º –≤—Å–µ —Å–∞–º –º–æ–∂–µ—Ç —Ä–∞–∑—Ä—É–ª–∏—Ç—å</li>
// // // // //                 <li>5 - –ù–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞</li>
// // // // //             </ul>
// // // // //         </div>
// // // // //     )
// // // // // }
// // // // //
// // // // // const root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);
// // // // // root.render(<App/>);
// // // // // // üìú –û–ø–∏—Å–∞–Ω–∏–µ:
// // // // // // –í –∫–∞–∫–æ–º —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–∞—é—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –ø—Ä–∏ —Å–ª–∏—è–Ω–∏–∏ –≤–µ—Ç–æ–∫ ?
// // // // // // –ú–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ (–æ—Ç–≤–µ—Ç –¥–∞–π—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª).
// // // // // // ‚ùó –û—Ç–≤–µ—Ç –±—É–¥–µ—Ç –∑–∞—Å—á–∏—Ç–∞–Ω –∫–∞–∫ –≤–µ—Ä–Ω—ã–π, —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–æ–ª–Ω–æ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏.
// // // // // // –ï—Å–ª–∏ —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç (1),
// // // // // // –∞ –Ω—É–∂–Ω–æ –±—ã–ª–æ —É–∫–∞–∑–∞—Ç—å –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ (1 –∏ 2), —Ç–æ –æ—Ç–≤–µ—Ç –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –±—É–¥–µ—Ç –∑–∞—Å—á–∏—Ç–∞–Ω –∫–∞–∫ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
// // // // //
// // // // // // üñ• –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: 1
// // // //
// // // // import ReactDOM from 'react-dom/client';
// // // // import React, { FC, ReactNode } from 'react'
// // // //
// // // // const quizStyle: React.CSSProperties = {
// // // //     background: 'lightgreen',
// // // //     padding: '10px',
// // // //     margin: '10px'
// // // // }
// // // //
// // // // type BtnPropsType = {
// // // //     question: ReactNode
// // // //     children: ReactNode
// // // // }
// // // //
// // // // const Block: FC<BtnPropsType> = ({question, children}) => {
// // // //     return (
// // // //         <div style={{display: 'flex', alignItems: 'center'}}>
// // // //             {question} = {children}
// // // //         </div>
// // // //     )
// // // // }
// // // //
// // // //
// // // // const quiz = [
// // // //     {id: 1, question: '1 + 1', answer: '2'},
// // // //     {id: 2, question: '2 + 2', answer: '4'},
// // // //     {id: 3, question: '3 + 3', answer: '6'},
// // // // ]
// // // //
// // // // const App = () => {
// // // //
// // // //     return (
// // // //         <div>
// // // //             {quiz.map((q) => {
// // // //                 return (
// // // //                     <Block question={<h2 style={quizStyle}>{q.question}</h2>}>
// // // //                     {/* <Block question={'‚ùó‚ùó‚ùó XXX ‚ùó‚ùó‚ùó'}>*/}
// // // //                         {<h2 style={quizStyle}>{q.answer}</h2>}
// // // //                         {/*    ‚ùó‚ùó‚ùó YYY ‚ùó‚ùó‚ùó*/}
// // // //                     </Block>
// // // //                 )
// // // //             })}
// // // //         </div>
// // // //     )
// // // // }
// // // //
// // // // const root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);
// // // // root.render(<App/>);
// // // //
// // // // // üìú –û–ø–∏—Å–∞–Ω–∏–µ:
// // // // // –ß—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤–º–µ—Å—Ç–æ XXX –∏ YYY, —á—Ç–æ–±—ã –Ω–∞ —ç–∫—Ä–∞–Ω–µ –æ—Ç–æ–±—Ä–∞–∑–∏–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –∏–∑ –º–∞—Å—Å–∏–≤–∞ quiz.
// // // // // 1 + 1 = 2
// // // // // 2 + 2 = 4
// // // // // 3 + 3 = 6
// // // // // ‚ùó –í–æ–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–µ–≥–æ–º h2 –∏ –∫ –Ω–∏–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω —Å—Ç–∏–ª—å quizStyle
// // // // // ‚ùó –û—Ç–≤–µ—Ç –¥–∞–π—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª
// // // //
// // // // // üñ• –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: quiz[0]=yes redux=h2
// // //
// // //
// // // import ReactDOM from 'react-dom/client';
// // // import React from 'react';
// // //
// // // export const Jpegs = () => {
// // //
// // //     return (
// // //         <div>
// // //             <iframe
// // //
// // //                 src="//coub.com/embed/2wp0wa?muted=false&autostart=false&originalSize=false&startWithHD=true"
// // //                 frameBorder="0"
// // //                 width="640"
// // //                 height="360"
// // //                 allow="autoplay"
// // //                 allowFullScreen
// // //             />
// // //         </div>
// // //     )
// // // }
// // //
// // // const root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);
// // // root.render(<Jpegs/>);
// // //
// // // // üìú –û–ø–∏—Å–∞–Ω–∏–µ:
// // // // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∂–∞–ª—É—é—Ç—Å—è, —á—Ç–æ –Ω–µ–ª—å–∑—è —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤–∏–¥–µ–æ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
// // // // –í –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –∫–æ–¥–∞
// // // //
// // // // üñ• –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: iframe.—Å—Ç–∞–Ω—å–ù–∞–í–µ—Å—å–≠–∫—Ä–∞–Ω–ü–æ–∂–∞–ª—É–π—Å—Ç–∞()
// //
// // import ReactDOM from "react-dom/client";
// // import { ThunkAction, ThunkDispatch } from "redux-thunk";
// // import { Provider, TypedUseSelectorHook, useDispatch, useSelector } from "react-redux";
// // import React, { FC, useEffect } from "react";
// // import axios from "axios";
// // import { configureStore, combineReducers } from "@reduxjs/toolkit";
// //
// // // Styles
// // const table: React.CSSProperties = {
// //     borderCollapse: "collapse",
// //     width: "100%",
// //     tableLayout: "fixed",
// // };
// //
// // const th: React.CSSProperties = {
// //     padding: "10px",
// //     border: "1px solid black",
// //     background: "lightgray",
// //     cursor: "pointer",
// // };
// //
// // const td: React.CSSProperties = {
// //     padding: "10px",
// //     border: "1px solid black",
// // };
// //
// // const thActive: React.CSSProperties = {
// //     padding: "10px",
// //     border: "1px solid black",
// //     background: "lightblue",
// //     cursor: "pointer",
// // };
// //
// // // Types
// // type UserType = {
// //     id: string;
// //     name: string;
// //     age: number;
// // };
// //
// // type UsersResponseType = {
// //     items: UserType[];
// //     totalCount: number;
// // };
// //
// // type ParamsType = {
// //     sortBy: string | null;
// //     sortDirection: "asc" | "desc" | null;
// // };
// //
// // // API
// // const instance = axios.create({ baseURL: "https://exams-frontend.kimitsu.it-incubator.ru/api/" });
// //
// // const api = {
// //     getUsers(params?: ParamsType) {
// //         return instance.get<UsersResponseType>("users", { params });
// //     },
// // };
// //
// // // Reducer
// // const initState = {
// //     users: [] as UserType[],
// //     params: {
// //         sortBy: "name",
// //         sortDirection: "asc",
// //     } as ParamsType,
// // };
// // type InitStateType = typeof initState;
// //
// // const appReducer = (state: InitStateType = initState, action: ActionsType): InitStateType => {
// //     switch (action.type) {
// //         case "SET_USERS":
// //             return { ...state, users: action.users };
// //         case "SET_PARAMS":
// //             return { ...state, params: { ...state.params, ...action.payload } };
// //         default:
// //             return state;
// //     }
// // };
// //
// // // Store
// // const rootReducer = combineReducers({ app: appReducer });
// //
// // const store = configureStore({ reducer: rootReducer });
// // type RootState = ReturnType<typeof store.getState>;
// // type AppDispatch = ThunkDispatch<RootState, unknown, ActionsType>;
// // type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, ActionsType>;
// // const useAppDispatch = () => useDispatch<AppDispatch>();
// // const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;
// //
// // const setUsersAC = (users: UserType[]) => ({ type: "SET_USERS", users }) as const;
// // const setParamsAC = (payload: ParamsType) => ({ type: "SET_PARAMS", payload }) as const;
// // type ActionsType =
// //     | ReturnType<typeof setUsersAC>
// //     | ReturnType<typeof setParamsAC>
// //
// // // Thunk
// // const getUsersTC = (): AppThunk => (dispatch, getState) => {
// //     const params = getState().app.params;
// //     api.getUsers(params).then((res) => dispatch(setUsersAC(res.data.items)));
// // };
// //
// // export const Users = () => {
// //     const users = useAppSelector((state) => state.app.users);
// //     const sortBy = useAppSelector((state) => state.app.params.sortBy);
// //     const sortDirection = useAppSelector((state) => state.app.params.sortDirection);
// //
// //     const dispatch = useAppDispatch();
// //
// //     useEffect(() => {
// //         dispatch(getUsersTC());
// //     }, [sortBy, sortDirection]);
// //
// //     const sortHandler = (sortBy: string) => {
// //         const direction = sortDirection === "asc" ? "desc" : "asc";
// //         dispatch(setParamsAC({ sortBy, sortDirection: direction }));
// //     };
// //
// //     return (
// //         <div>
// //             <h1>üë™ –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h1>
// //             <table style={table}>
// //                 <thead>
// //                 <tr>
// //                     <Th name={"name"} sortHandler={sortHandler} />
// //                     <Th name={"age"} sortHandler={sortHandler} />
// //                 </tr>
// //                 </thead>
// //                 <tbody>
// //                 {users.map((u) => {
// //                     return (
// //                         <tr key={u.id}>
// //                             <td style={td}>{u.name}</td>
// //                             <td style={td}>{u.age}</td>
// //                         </tr>
// //                     );
// //                 })}
// //                 </tbody>
// //             </table>
// //         </div>
// //     );
// // };
// //
// // type ThPropsType = {
// //     name: string;
// //     sortHandler: (name: string) => void;
// // };
// //
// // const Th: FC<ThPropsType> = ({ name, sortHandler }) => {
// //     const sortBy = useAppSelector((state) => state.app.params.sortBy);
// //     const sortDirection = useAppSelector((state) => state.app.params.sortDirection);
// //
// //     const condition1 = sortBy===name;
// //     // const condition1 = "‚ùó‚ùó‚ùó XXX ‚ùó‚ùó‚ùó";
// //     const condition2 = sortDirection==="desc";
// //     // const condition2 = "‚ùó‚ùó‚ùó YYY ‚ùó‚ùó‚ùó";
// //
// //     return (
// //         <th style={condition1 ? thActive : th} onClick={() => sortHandler(name)}>
// //             {name}
// //             {condition1 && (condition2 ? <span> ‚¨Ü</span> : <span> ‚¨á</span>)}
// //         </th>
// //     );
// // };
// //
// // const root = ReactDOM.createRoot(document.getElementById("root") as HTMLElement);
// // root.render(
// //     <Provider store={store}>
// //         <Users />
// //     </Provider>,
// // );
// //
// // // üìú –û–ø–∏—Å–∞–Ω–∏–µ:
// // // –ü–µ—Ä–µ–¥ –≤–∞–º–∏ —Ç–∞–±–ª–∏—Ü–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.
// // // –ü–æ–∫–ª–∏–∫–∞–π—Ç–µ –ø–æ –≤–∫–ª–∞–¥–∫–∞–º age –∏ name –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–µ—Ä–Ω–æ,
// // // –Ω–æ –≤ —à–∞–ø–∫–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è —Å—Ç—Ä–µ–ª–∫–∏ –∏ –Ω–µ –≤–∏–¥–Ω–æ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–æ–ª–æ–Ω–∫–∏
// // // –í–∞—à–∞ –∑–∞–¥–∞—á–∞ –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –≤–º–µ—Å—Ç–æ XXX –∏ YYY, —á—Ç–æ–±—ã:
// // // 1) –°—Ç—Ä–µ–ª–∫–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–ª–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ (–µ—Å–ª–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –æ—Ç –º–µ–Ω—å—à–µ–≥–æ –∫ –±–æ–ª—å—à–µ–º—É, —Ç–æ —Å—Ç—Ä–µ–ª–∫–∞ –≤–≤–µ—Ä—Ö)
// // // 2) –®–∞–ø–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–æ–ª–æ–Ω–∫–∏ –±—ã–ª–∞ –≥–æ–ª—É–±–∞—è, –∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Ä–∞—è
// // // ‚ùó –û—Ç–≤–µ—Ç –¥–∞–π—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª
// //
// // // üñ• –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: a === '1' b !== a
// //
// // /////// wrong answer
//
// import ReactDOM from 'react-dom/client';
// import React, { useState } from 'react'
//
// export const Jpegs = () => {
//     const [fileURL, setFileURL] = useState<any>()
//
//     const onChange = (e: any) => {
//         const maybeFile = e.target.files?.[0]
//         if (maybeFile) {
//             if (maybeFile.type === 'image/jpeg') {
//                 setFileURL(URL.createObjectURL( maybeFile))
//                 return
//             } else alert('not .jpg!')
//         }
//         setFileURL('')
//     }
//
//
//     return (
//         <div>
//             <input
//                 type={'file'}
//                 onChange={onChange}
//
//             />
//             {fileURL && (
//                 <img
//                     src={fileURL}
//                     alt={'avatar'}
//
//                 />
//             )}
//         </div>
//     )
// }
//
// const root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);
// root.render(<Jpegs/>);
//
// // üìú –û–ø–∏—Å–∞–Ω–∏–µ:
// // –ù–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ.
// // –í –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Å—Ç—Ä–æ–∫–∏ –∫–æ–¥–∞
// //
// // üñ• –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: value={fileURL}
//
